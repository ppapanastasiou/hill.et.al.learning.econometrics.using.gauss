close all;clear;clc
format bank; % two decimal points

% Bivariate normal random variables may be generated by the following procedures
% Let Sigma be the covariance matrix, C be the corresponding matrix of characteristic vectors
% ,also known as eigenvectors, latent vectors or proper vectors, and D be the diagonal matrix of characteristic
% ,roots, also known as eigenvalues, latent roots or proper values. Then C*Sigma*C' = D and
% D^(-1/2)*C*Sigma*C'*D^(-1/2) = D^(-1/2)*D*D^(-1/2) = I, where I is the identity matrix and
% Sigma = C'*D^(1/2)*D^(1/2)*C.

% As an example, assume that the covariance matrix is

mSigma = [ 1 1; 1 2];
display(mSigma)

[C, d] = eig(mSigma);% In matlab with two outputs we get first the eigenvectors and then the eigenvalues
d=diag(d);% only want the diagonal, since we want only a column vector containing the eigenvalues
% Note that MATLAB orders the characteristic roots and the corresponding characteristic
% vectors from smallest to largest. To conform to the text order the roots
% from largest to smallest and reverse the order of the columns of the matrix of
% characteristic vectors to match.
d = flipud(d);
C = flipud(C');
% Create the diagonal matrix D of characteristic roots
D = zeros( length(d), length(d));
D(logical(eye(size(D)))) = d;
% Due to the normalization issue of characteristic vectors in MATLAB the sign of the last characteristic vector 
% must be changed for us to exactly replicate the results.
C(end,:) = -C(end,:);

% with the corresponding matrix of characeteristic vectors
display(C)

% and the diagonal matrix of characteristic roots 2.6180 and 0.3820.
display(D)

% Let
SqrtD = sqrt(D);
display(SqrtD);

% Thus
CTransposeSqrtD = C'*SqrtD;
display(CTransposeSqrtD);

% Define some random variables
e1 = randn(1000,1);
e2 = randn(1000,1);
e = [e1 e2];

% Given the foregoing matrix, each pair of generated independent standard normal random variates e1 and e2 are used with
% C'sqrt(D) to obtain bivariate normal variates estar1 and estar2
estar = e * CTransposeSqrtD';
estar1 = estar(:,1);
estar2 = estar(:,2);

% The bivariate normal random variates estar1 and estar2 have a theoretical mean 0 (empirically the will be close to zero)
disp(mean(estar1))
disp(mean(estar2))

% and covariance matrix Sigma
SqrtDC = sqrt(D)*C;
mSigma1 = CTransposeSqrtD*eye(2)*SqrtDC;
display(mSigma1)

%% 
% Alternatively, if a computer package is available, the Cholesky matrix decomposition
% method may be used to obtain a nonsingular triangular matrix P such that P*PTranspose = Sigma

% For example if
mSigma2 = [3 2; 2 8];
display(mSigma2)

% This yields a Cholesky matrix
P = chol(mSigma2);
P = P';
display(P)

% and
mSigma3 = P*eye(2)*P';
display(mSigma3)

% In a monte Carlo sampling study, using the transformation matrix, these procedures are repeated
% for each of T pairs of random variables for each of the N samples  



